<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch 
		http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		">
	<bean id="jobRepository" 
		class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
	</bean> 	
	<bean id="transactionManager"
		class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />
	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>
	
	<job id="csvConverterJob" xmlns="http://www.springframework.org/schema/batch">
		<step id="pasoUnico">
			<tasklet>
				<chunk reader="itemReader"
					processor="itemProcessor"
					writer="itemWriter"
					commit-interval="10" />
			</tasklet>
		</step>
	</job>

	<bean id="itemProcessor"
		class="com.example.demo.batch.PersonaItemProcessor" />

	<bean id="personaBean" class="com.example.demo.model.Persona"
		scope="prototype" />
	<bean id="personaDTOBean"
		class="com.example.demo.model.PersonaDTO" scope="prototype" />

	<bean id="itemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="file:src/main/resources/personas-1.csv" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="id,nombre,apellidos,correo,sexo,ip" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="personaDTOBean" />
					</bean>
				</property>
			</bean>
		</property>
		<property name="linesToSkip" value="1" />
	</bean>
	
	<bean id="itemWriter"
		class="org.springframework.batch.item.file.FlatFileItemWriter">
		<property name="resource" value="file:src/main/resources/outputData.csv" />
		<property name="lineAggregator">
			<bean
				class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="," />
				<property name="fieldExtractor">
					<bean
						class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="id,nombre,correo,ip" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>
	
</beans>
